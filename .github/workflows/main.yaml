name: Deploy to ECS

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      SH8: ${{ github.sha }}

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Get short commit
        run: |
          echo "SH8=$(echo ${{ env.SH8 }} | cut -c1-8)" >> $GITHUB_ENV

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker build -t $ECR_REGISTRY/demo:${{ env.SH8 }} -f ./Dockerfile .
          docker push $ECR_REGISTRY/demo:${{ env.SH8 }}
          echo "image=$ECR_REGISTRY/demo:${{ env.SH8 }}" >> $GITHUB_OUTPUT

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ./ecs/tasks/task_definition.json
          container-name: demo-task
          image: ${{ steps.build-image.outputs.image }}

      - uses: cschleiden/replace-tokens@v1
        with:
          tokenPrefix: '$('
          tokenSuffix: ')'
          files: ./ecs/tasks/task_definition.json
        env: 
          image-task-definition: ${{ steps.build-image.outputs.image }}

      - name: Print Task Definition
        run: cat ./ecs/tasks/task_definition.json

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v2
        with:
          task-definition: ./ecs/tasks/task_definition.json
          service: demo
          cluster: demo-prd
          wait-for-service-stability: true